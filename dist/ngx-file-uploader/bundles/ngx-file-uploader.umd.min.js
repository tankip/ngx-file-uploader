!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("jspdf"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-file-uploader",["exports","@angular/core","@angular/forms","jspdf","@angular/common"],t):t(e["ngx-file-uploader"]={},e.ng.core,e.ng.forms,null,e.ng.common)}(this,function(e,t,i,a,n){"use strict";a=a&&a.hasOwnProperty("default")?a["default"]:a;var o=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}();var l=function(){},r=function(){function e(){this.urls=new Array,this.selectFileType=!0,this.fileList=new Array,this.pdfAvailable=!1,this.mobile=!1,this.UploadCaptions=!1,this.multiple=!0,this.fileUpload=!1,this.backButton=!1,this.fileChanged=new t.EventEmitter,this.liveCamera=new t.EventEmitter,this.uploadData=new t.EventEmitter,this._onClear=new t.EventEmitter,this.uploading=!1,this.innerValue="",this.onTouchedCallback=l,this.onChangeCallback=l}return e.prototype.ngOnInit=function(){this.singleFile&&(this.multiple=!1),window.screen.width<=692&&(this.mobile=!0)},Object.defineProperty(e.prototype,"value",{get:function(){return this.innerValue},set:function(e){e!==this.innerValue&&(this.innerValue=e,this.onChangeCallback(e))},enumerable:!0,configurable:!0}),e.prototype.writeValue=function(e){e!==this.innerValue&&(this.innerValue=e)},e.prototype.registerOnChange=function(e){this.onChangeCallback=e},e.prototype.registerOnTouched=function(e){this.onTouchedCallback=e},e.prototype.onBlur=function(){this.onTouchedCallback()},e.prototype.onChange=function(e){var t,i,r=this,n=e.srcElement.files;if(this.uploading=!0,n){var a=function(o){var l=new FileReader;l.onload=function(e){var t=l.result,i=o.name,n=Math.round(o.size/1024),a={data:t,id:r.urls.length+1,name:i,size:n};r.singleFile?(r.fileChanged.emit(a),r.back()):(r.urls.push(a),r.fileList.push(a))},l.readAsDataURL(o)};try{for(var o=function p(e){var t="function"==typeof Symbol&&e[Symbol.iterator],i=0;return t?t.call(e):{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}}}(n),l=o.next();!l.done;l=o.next()){a(l.value)}}catch(s){t={error:s}}finally{try{l&&!l.done&&(i=o["return"])&&i.call(o)}finally{if(t)throw t.error}}}},e.prototype.clear=function(){this.value="",this.onChangeCallback(this.value),this.urls=[],this.back(),this._onClear.emit()},e.prototype.back=function(){this.selectFileType=!0,this.urls=[],this.backButton=!1,this.fileList=[],this.UploadCaptions=!1,this.fileUpload=!1,this.liveCamera.emit()},e.prototype.toggleVisibility=function(e){"image"===e?(this.fileType="image/png, image/jpeg, image/gif",this.fileUpload=!0):"pdf"===e?(this.fileType="application/pdf",this.pdfAvailable=!0,this.fileUpload=!0):"both"===e?(this.fileType="image/png, image/jpeg, image/gif , application/pdf",this.pdfAvailable=!0,this.fileUpload=!0):"liveCamera"===e&&this.liveCamera.emit(),this.selectFileType=!1,this.backButton=!0},e.prototype.upload=function(){this.uploadData.emit(this.fileList),this.back()},e.prototype.MergeImages=function(){var e=new a;e.page=1;for(var t=0;t<this.fileList.length;t++){var i=this.fileList[t].data||this.fileList[t].imageAsDataUrl;e.addImage(i,"JPG",10,10,190,270),e.setFont("courier"),e.setFontType("normal"),e.text(180,290,"page "+e.page),e.page++,t<this.fileList.length&&e.addPage()}e.deletePage(this.fileList.length+1),this.fileList=[],this.urls=[];var n={data:e.output("datauristring")};this.fileList.push(n),this.urls.push(n),e.output("dataurlnewwindow")},e.prototype["delete"]=function(e){for(var t=0;t<=this.urls.length;t++)if(e.data){if(this.urls[t].data===e.data){this.urls.splice(t,1),this.fileList.splice(t,1);break}}else if(e.imageAsDataUrl&&this.urls[t].imageAsDataUrl===e.imageAsDataUrl){this.urls.splice(t),this.fileList.splice(t,1);break}},e.decorators=[{type:t.Component,args:[{selector:"file-uploader",template:'<div *ngIf="backButton">\n  <button class="btn btn-default image-preview-clear" type="button" (click)="back()">\n    <span class="glyphicon glyphicon-circle-arrow-left"></span> Back\n  </button>\n</div>\n<div *ngIf="selectFileType" class="panel panel-primary">\n  <div class="panel-heading">UPLOAD FILE TYPE</div>\n  <div class="panel-body">\n    <div class="row-cb">\n      <span><input name="image" id="ima" (change)="toggleVisibility(\'image\')" type="checkbox" /></span>\n      <label for="ima">Image</label>\n\n      <div class="clear-both"></div>\n    </div>\n    <div class="row-cb">\n      <span><input name="option" id="pdf" (change)="toggleVisibility(\'pdf\')" type="checkbox" /></span>\n      <label for="pdf">PDF</label>\n\n      <div class="clear-both"></div>\n    </div>\n    <div *ngIf="!singleFile" class="row-cb">\n      <span><input name="option" id="both" (change)="toggleVisibility(\'both\')" type="checkbox" /></span>\n      <label for="both">Image & PDF</label>\n\n      <div class="clear-both"></div>\n    </div>\n    <div class="row-cb">\n      <span><input name="camera" id="camera" (change)="toggleVisibility(\'liveCamera\')" type="checkbox" /></span>\n      <label for="camera">Live Camera</label>\n\n      <div class="clear-both"></div>\n    </div>\n  </div>\n</div>\n<div style="display: block;">\n  <div style="display: inline-block;" *ngFor="let url of urls;let i=index">\n    <a class="columne" id="caption">\n      <img style=" border: 1px solid rgb(97, 97, 97); margin: 2px; border-radius: 4px;padding: 5px;" id="img{{i}}"\n        [src]="url.data || url.imageAsDataUrl"\n        onError="this.onerror=null;this.src=\'59e6d5338faf193392f1bf9f89f4513dc548bd68.png | secure\';"\n        class="rounded mb-3" width="90" height="200">\n      <div class="text">\n        <h2 title="Click to Delete File {{url.name}}" (click)="delete(url)"\n          style="color: rgb(255, 255, 255); font-family: fantasy;"><span class="glyphicon glyphicon-trash"></span>REMOVE\n        </h2>\n      </div>\n    </a>\n  </div>\n  <button *ngIf="UploadCaptions" type="button" (click)="upload()" class="button">\n    <span class="glyphicon glyphicon-upload"></span> Upload Files\n  </button>\n  <button *ngIf="!pdfAvailable && fileUpload || liveCamera" type="button" [disabled]="!urls[1]" (click)="MergeImages()"\n    title="merge the images as pages in one pdf document" class="btn btn-default image-preview-clear">\n    <span class="glyphicon glyphicon-upload"></span> Merge\n  </button>\n</div>\n<div *ngIf="fileUpload">\n\n  <div class="input-group">\n    <input type="text" class="form-control" readonly [(ngModel)]="value">\n    <div class="input-group-btn">\n\n      <div class="btn btn-default image-preview-input">\n        <span class="glyphicon glyphicon-folder-open"></span>\n        <span class="image-preview-input-title">SELECT FILE</span>\n        <input *ngIf="multiple" type="file" multiple accept="{{fileType}}" (blur)="onBlur()" name="input-file-preview"\n          (change)="onChange($event)" />\n        <input *ngIf="!multiple" type="file" accept="{{fileType}}" (blur)="onBlur()" name="input-file-preview"\n          (change)="onChange($event)" />\n        \x3c!-- rename it --\x3e\n      </div>\n      <button *ngIf="value" type="button" (click)="clear()" class="btn btn-default image-preview-clear">\n        <span class="glyphicon glyphicon-remove"></span> Clear\n      </button>\n      <button *ngIf="multiple" type="button" (click)="upload()" class="button">\n        <span class="glyphicon glyphicon-upload"></span> Upload\n      </button>\n    </div>\n  </div>\n  <div *ngIf="!mobile" class="image-upload-wrap">\n    <input *ngIf="multiple" class="file-upload-input" type=\'file\' (change)="onChange($event)" multiple\n      accept="{{fileType}}" />\n    <input *ngIf="!multiple" class="file-upload-input" type=\'file\' (change)="onChange($event)" accept="{{fileType}}" />\n    <div class="drag-text">\n      <h3>Drag and Drop file(s)</h3>\n    </div>\n  </div>\n</div>',encapsulation:t.ViewEncapsulation.Native,providers:[{provide:i.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return e}),multi:!0}],styles:[".btn-file{position:relative;overflow:hidden}.btn-file input[type=file]{position:absolute;top:0;right:0;min-width:100%;min-height:100%;font-size:100px;text-align:right;opacity:0;outline:0;background:#fff;cursor:inherit;display:block}#img-upload{width:100%}.image-preview-input input[type=file]{position:absolute;top:0;right:0;margin:0;padding:0;font-size:20px;cursor:pointer;opacity:0}.file-upload{background-color:#fff;width:600px;margin:0 auto;padding:20px}.file-upload-btn{width:100%;margin:0;color:#fff;background:#1fb264;border:none;padding:10px;border-radius:4px;border-bottom:4px solid #15824b;transition:.2s;outline:0;text-transform:uppercase;font-weight:700}ul{list-style-type:none;margin:0;padding:0}.file-upload-btn:hover{background:#1aa059;color:#fff;transition:.2s;cursor:pointer}.file-upload-btn:active{border:0;transition:.2s}.file-upload-content{display:none;text-align:center}.file-upload-input{position:absolute;margin:0;padding:0;width:100%;height:100%;outline:0;opacity:0;cursor:pointer}.image-upload-wrap{margin-top:20px;border:4px dashed #3683c7;position:relative}.image-dropping,.image-upload-wrap:hover{background-color:#337ab7;border:4px dashed #fff}.image-title-wrap{padding:0 15px 15px;color:#222}.drag-text{text-align:center}.drag-text h3{font-weight:100;text-transform:uppercase;color:#155a82;padding:60px 0}.file-upload-image{max-height:200px;max-width:200px;margin:auto;padding:20px}.button{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1.42857143;text-align:center;white-space:nowrap;vertical-align:middle;touch-action:manipulation;cursor:pointer;background-color:#004a7f;border:none;color:#fff;text-decoration:none;-webkit-animation:1.5s infinite glowing;animation:1.5s infinite glowing}@-webkit-keyframes glowing{0%{background-color:#002fb2;-webkit-box-shadow:0 0 3px #005cb2}50%{background-color:#203864;-webkit-box-shadow:0 0 40px #203864}100%{background-color:#005cb2;-webkit-box-shadow:0 0 3px #005cb2}}@keyframes glowing{0%,100%{background-color:#005cb2;box-shadow:0 0 3px #005cb2}50%{background-color:#203864;box-shadow:0 0 40px #203864}}.actionBtn{margin-top:5px;margin-bottom:2px;font-size:1.2em}label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700;margin-right:10px}.row-cb{margin:auto;font-size:15px}.row-cb label{float:left}.row-cb span{float:left;text-align:left}.snapshot{text-align:center}.snapshot img{max-width:800px;max-height:800px}.columne#caption .text h1{margin:0;color:#fff}.columne#caption:hover .text{opacity:1;cursor:pointer;opacity:1}.columne#caption{position:relative}.columne#caption .text{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);z-index:10;opacity:0;transition:.8s}.columne#caption:hover img{-webkit-filter:sepia(90%)}@media (max-width:629px){.file-upload-input{display:none!important}}"]}]}],e.propDecorators={singleFile:[{type:t.Input}],source:[{type:t.Input}],fileChanged:[{type:t.Output}],liveCamera:[{type:t.Output}],uploadData:[{type:t.Output}],_onClear:[{type:t.Output}]},e}(),p=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,i.FormsModule],declarations:[r],exports:[r]}]}],e}();e.NgxFileUploaderService=o,e.NgxFileUploaderComponent=r,e.NgxFileUploaderModule=p,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-file-uploader.umd.min.js.map